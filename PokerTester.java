/**
    	Runs a tester to test various parts of the program
	 */

public class PokerTester {
	public static void main(String[] args)
	{
		System.out.println("Each test is seperated by -------------------------");
		
		JavaDollars wallet = new JavaDollars(100);
		Deck deck = new Deck();
		Hand hand = new Hand(deck);
		System.out.println("Testing the wallet functionality (JavaDollars)");
		System.out.println("Expecting: 100");
		System.out.println(wallet.funds());
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing the deck shuffler");
		System.out.println("Printing the unshuffled deck: ");
		
		System.out.println(deck.printUnshuffledDeck());
		System.out.println("Expecting: 2 3 4 5 6 7 8 9 10 11 12 13 14 2 3 4 5 6 7 8 9 10 11 12 13 14 2 3 4 5 6 7 8 9 10 11 12 13 14 2 3 4 5 6 7 8 9 10 11 12 13 14 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1 2 3 4 1");
		System.out.println("Printing the shuffled deck:");
		System.out.println(deck.printShuffledDeck());
		System.out.println("Expecting: Unknown, as deck shuffling should make the card order random.");
			
		
		
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		
		Card card1 = new Card("Ace", "Hearts"); 
		Card card2 = new Card("Ten", "Hearts"); 
		Card card3 = new Card("King", "Hearts"); 
		Card card4 = new Card("Jack", "Hearts"); 
		Card card5 = new Card("Queen", "Hearts"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println("");
		System.out.println("Testing a royal flush");
		System.out.println("");
		System.out.println(hand.showHand());
		System.out.println("Expecting: Royal Flush!");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 250");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());
		
		
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing a straight with an ace:");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("Ace", "Spades"); 
		card2 = new Card("Ten", "Hearts"); 
		card3 = new Card("King", "Spades"); 
		card4 = new Card("Jack", "Hearts"); 
		card5 = new Card("Queen", "Hearts"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println(hand.showHand());
		System.out.println("Expecting: Straight!");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 4");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());
		
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing out a straight without an Ace:");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("nine", "Hearts"); 
		card2 = new Card("Ten", "Hearts"); 
		card3 = new Card("eight", "Diamonds"); 
		card4 = new Card("Jack", "Hearts"); 
		card5 = new Card("seven", "Spades"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println(hand.showHand());
		System.out.println("Expecting: Straight!");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 4");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());
		
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing out a straight flush:");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("nine", "Hearts"); 
		card2 = new Card("Ten", "Hearts"); 
		card3 = new Card("eight", "Hearts"); 
		card4 = new Card("Jack", "Hearts"); 
		card5 = new Card("seven", "Hearts"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println(hand.showHand());
		System.out.println("Expecting: Straight Flush!");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 50");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());
		
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing out a flush:");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("nine", "Hearts"); 
		card2 = new Card("six", "Hearts"); 
		card3 = new Card("four", "Hearts"); 
		card4 = new Card("Queen", "Hearts"); 
		card5 = new Card("seven", "Hearts"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println(hand.showHand());
		System.out.println("Expecting: Flush!");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 5");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());
		
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing out a full house:");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("nine", "Hearts"); 
		card2 = new Card("nine", "Spades"); 
		card3 = new Card("nine", "Diamonds"); 
		card4 = new Card("Queen", "Hearts"); 
		card5 = new Card("Queen", "Spades"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println(hand.showHand());
		System.out.println("Expecting: Full House!");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 6");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());
		
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing out a four of a kind:");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("nine", "Hearts"); 
		card2 = new Card("nine", "Spades"); 
		card3 = new Card("nine", "Diamonds"); 
		card4 = new Card("nine", "Clubs"); 
		card5 = new Card("Queen", "Spades"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println(hand.showHand());
		System.out.println("Expecting: Four of a kind!");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 25");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());


		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing out for three of a kind:");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("nine", "Hearts"); 
		card2 = new Card("nine", "Spades"); 
		card3 = new Card("nine", "Diamonds"); 
		card4 = new Card("King", "Clubs"); 
		card5 = new Card("Queen", "Spades"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println(hand.showHand());
		System.out.println("Expecting: Three of a kind! 9 of Diamonds and 9 of Spades and 9 of Hearts");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 3");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());
		
		
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing out two pairs");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("nine", "Hearts"); 
		card2 = new Card("nine", "Spades"); 
		card3 = new Card("eight", "Diamonds"); 
		card4 = new Card("eight", "Clubs"); 
		card5 = new Card("Queen", "Spades"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println(hand.showHand());
		System.out.println("Expecting: Two Pairs!");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 2");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());
		
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing out a single pair:");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("nine", "Hearts"); 
		card2 = new Card("nine", "Spades"); 
		card3 = new Card("seven", "Diamonds"); 
		card4 = new Card("eight", "Clubs"); 
		card5 = new Card("Queen", "Spades"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println(hand.showHand());
		System.out.println("Expecting: Pair! 9 of Hearts and 9 of Spades");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 0");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());

		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing out no pairs:");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("nine", "Hearts"); 
		card2 = new Card("six", "Spades"); 
		card3 = new Card("seven", "Diamonds"); 
		card4 = new Card("eight", "Clubs"); 
		card5 = new Card("Queen", "Spades"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println(hand.showHand());
		System.out.println("Expecting: High card: Queen of Spades");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 0");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());
		
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing out having only 4 cards in the hand:");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("nine", "Hearts"); 
		card2 = new Card("nine", "Spades"); 
		card3 = new Card("seven", "Diamonds"); 
		card4 = new Card("eight", "Clubs"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		System.out.println("Expecting: CARD 1: No Card, CARD 2: 7 of Diamonds, CARD 3: 8 of Clubs, CARD 4: 9 of Spades, CARD 5: 9 of Hearts");
		System.out.println(hand.showHand());
		System.out.println("");
		System.out.println("Hand should still state that there is a pair");
		System.out.println("");
		System.out.println("Expecting: Pair! 9 of Hearts and 9 of Spades");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 0");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());
		
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing out a single pair of jacks (payout for pairs begins here):");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("Jack", "Hearts"); 
		card2 = new Card("Jack", "Spades"); 
		card3 = new Card("seven", "Diamonds"); 
		card4 = new Card("eight", "Clubs"); 
		card5 = new Card("Queen", "Spades"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println(hand.showHand());
		System.out.println("Expecting: Pair! Jack of Hearts and Jack of Spades");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 1 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 1");
		wallet.bet(1);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());
		
		System.out.println("");
		System.out.println("-------------------------");
		System.out.println("");
		System.out.println("Testing the payout when more than 1 JavaDollar is bet:");
		System.out.println("");
		hand.discardHand();
		card1 = new Card("Jack", "Hearts"); 
		card2 = new Card("Jack", "Spades");
		card3 = new Card("seven", "Diamonds"); 
		card4 = new Card("eight", "Clubs"); 
		card5 = new Card("Queen", "Spades"); 
		hand.add(card1);
		hand.add(card2);
		hand.add(card3);
		hand.add(card4);
		hand.add(card5);
		System.out.println(hand.showHand());
		System.out.println("Expecting: Pair! Jack of Hearts and Jack of Spades");
		System.out.println(hand.handContains());
		System.out.println("");
		System.out.println("Testing the payout with 5 JavaDollar bet");
		System.out.println("");
		System.out.println("Expecting: 5");
		wallet.bet(5);
		wallet.won(hand.handContains());
		System.out.println(wallet.wonThisRound());
		
	}
}
